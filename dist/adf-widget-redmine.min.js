!function(e,t){"use strict";angular.module("adf.widget.redmine",["adf.provider","smart-table","chart.js","ui.bootstrap.datepicker"]).constant("redmineEndpoint","http://www.redmine.org/").config(["dashboardProvider",function(e){var t={templateUrl:"{widgetsPath}/redmine/src/main/issues/edit/edit.html",controller:"editIssuesController",controllerAs:"vm",resolve:{projects:["redmineService",function(e){return e.getProjects()}]}},n={templateUrl:"{widgetsPath}/redmine/src/main/chart/edit/edit.html",controller:"editChartController",controllerAs:"vm",resolve:{projects:["redmineService",function(e){return e.getProjects()}]}};e.widget("redmine-issues",{title:"Redmine Issues",description:"Shows Issues of a given Redmine Instance",templateUrl:"{widgetsPath}/redmine/src/main/issues/view.html",controller:"IssueController",controllerAs:"vm",resolve:{issues:["redmineService","config",function(e,t){return e.getIssues(t)}]},edit:t}),e.widget("redmine-chart",{title:"Redmine Chart",description:"Displays a burnup or burndown chart",templateUrl:"{widgetsPath}/redmine/src/main/chart/view.html",controller:"ChartController",controllerAs:"vm",resolve:{chartData:["chartDataService","config",function(e,t){if(t.project)return e.getChartData(t)}]},edit:n})}]),angular.module("adf.widget.redmine").run(["$templateCache",function(e){e.put("{widgetsPath}/redmine/src/chart/view.html",'<div class="alert alert-info" ng-if=!vm.chart>Please configure the widget</div><div ng-if=vm.chart><canvas id=line class="chart chart-line" chart-data=vm.chart.data chart-series=vm.chart.series chart-options=vm.chart.options></canvas></div>'),e.put("{widgetsPath}/redmine/src/issues/view.html",'<div class="alert alert-info" ng-if=!vm.config.columns>Please configure the widget</div><div ng-if=vm.config.columns><table st-table=rowCollection class="table table-striped"><thead><tr><th ng-if=vm.config.columns.id.show>ID</th><th ng-if=vm.config.columns.tracker.show>Tracker</th><th ng-if=vm.config.columns.status.show>Status</th><th ng-if=vm.config.columns.subject.show>Subject</th></tr></thead><tbody><tr ng-repeat="issue in vm.issues"><td ng-if=vm.config.columns.id.show><a href=http://www.redmine.org/issues/{{issue.id}}>{{issue.id}}</a></td><td ng-if=vm.config.columns.tracker.show>{{issue.tracker.name}}</td><td ng-if=vm.config.columns.status.show>{{issue.status.name}}</td><td ng-if=vm.config.columns.subject.show>{{issue.subject}}</td></tr></tbody></table></div>'),e.put("{widgetsPath}/redmine/src/chart/edit/edit.html",'<form role=form><div class=form-group><label for=project>Filter</label></div><div class=form-group><label for=project>Project</label><select name=project id=project class=form-control ng-model=vm.config.project ng-change=vm.checkUpdates() ng-required=true><option value=All>All</option><option ng-repeat="project in vm.projects | orderBy: \'name\'" value={{project}}>{{project.name}}</option></select></div><p class=input-group>Add Filter<select name=filter id=filter class=form-control ng-model=vm.filterToAdd ng-change=vm.addFilter(vm.filterToAdd)><option ng-repeat="filter in vm.filters | orderBy: \'name\'" value={{filter.id}}>{{filter.name}}</option></select></p><div class=input-group ng-if=vm.config.filterWithVersion ng-init=vm.updateVersions() "><label for=version>Fixed Version</label><select name=version id=version class=form-control ng-model=vm.config.version ng-change=vm.updateVersionEnd()><option ng-repeat="version in vm.versions | orderBy: \'name\'" value={{version}}>{{version.name}}</option></select><span class=input-group-btn><button class="btn btn-default" ng-click="vm.config.filterWithVersion=false" type=button><i class="glyphicon glyphicon-remove"></i></button></span></div><div class=input-group ng-if=vm.config.filterWithAssigned><label for=assgined_to_id>Assigned To</label> <span class="glyphicon glyphicon-info-sign" uib-tooltip="Get issues which are assigned to the given user ID. <me> can be used instead an ID to fetch all issues from the logged in user. Leave empty if you want to see all issues."></span> <input name=assigned_to_id id=assgined_to_id class=form-control ng-model=config.assigned_to_id> <span class=input-group-btn><button class="btn btn-default" ng-click="vm.config.filterWithAssigned=false" type=button><i class="glyphicon glyphicon-remove"></i></button></span></div><div class=input-group ng-if=vm.config.filterWithTracker ng-init=vm.updateTracker() "><label for=tacker>Tracker</label><select name=tracker id=tracker class=form-control ng-model=vm.config.tracker><option ng-repeat="tracker in vm.trackers | orderBy: \'name\'" value={{tracker}}>{{tracker.name}}</option></select><span class=input-group-btn><button class="btn btn-default" ng-click="vm.config.filterWithTracker=false" type=button><i class="glyphicon glyphicon-remove"></i></button></span></div><div class=form-group><input type=checkbox name=showIdeal ng-model=config.showIdeal> Show ideal line</div><div><p class=input-group><input class=form-control datepicker-options=vm.dateOptions is-open=vm.popup1.opened ng-model=vm.config.timespan.fromDateTime placeholder=from show-button-bar=false type=text uib-datepicker-popup={{format}} ng-required=true> <span class=input-group-btn><button class="btn btn-default" ng-click=vm.open1() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p><p class=input-group><input class=form-control datepicker-options=vm.dateOptions is-open=vm.popup2.opened ng-model=vm.config.timespan.toDateTime placeholder=to show-button-bar=false type=text uib-datepicker-popup={{format}} ng-required=true> <span class=input-group-btn><button class="btn btn-default" ng-click=vm.open2() type=button><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></form>'),e.put("{widgetsPath}/redmine/src/issues/edit/edit.html",'<form role=form><div class=form-group><label for=project>Project</label><select name=project id=project class=form-control ng-model=config.project><option value=All>All</option><option ng-repeat="project in vm.projects | orderBy: \'name\'" value={{project.id}}>{{project.name}}</option></select></div><div class=form-group><label for=assgined_to_id>Assigned To</label> <span class="glyphicon glyphicon-info-sign" uib-tooltip="Get issues which are assigned to the given user ID. <me> can be used instead an ID to fetch all issues from the logged in user. Leave empty if you want to see all issues."></span> <input name=assigned_to_id id=assgined_to_id class=form-control ng-model=config.assigned_to_id></div><div class=form-group><input type=checkbox name=showClosed ng-model=config.showClosed> Show closed issues</div><div class=form-group><label for=project>Columns to show:</label><li class=list-group-item ng-repeat="(key, entry) in vm.possibleColumns"><input type=checkbox name={{key}} ng-model=config.columns[key].show> {{entry.name}}</li></div></form>')}]),angular.module("adf.widget.redmine").controller("editIssuesController",["projects","config",function(e,t){var n=this;n.possibleColumns={id:{name:"ID",show:!0},tracker:{name:"Tracker",show:!0},status:{name:"Status",show:!0},subject:{name:"Subject",show:!0}},angular.equals({},t)&&(t.columns=n.possibleColumns,t.project="",t.assigned_to_id="me",t.showClosed=!1),n.projects=e}]),angular.module("adf.widget.redmine").controller("editChartController",["projects","config","chartDataService","redmineService",function(e,t,n,i){function o(e){"version"===e?m.config.filterWithVersion=!0:"assigned"===e?m.config.filterWithAssigned=!0:"tracker"===e&&(m.config.filterWithTracker=!0),m.filterToAdd="none"}function r(){m.config.timespan.fromDateTime&&(m.config.timespan.fromDateTime=new Date(m.config.timespan.fromDateTime),m.config.timespan.toDateTime=new Date(m.config.timespan.toDateTime))}function s(){m.inlineOptions.minDate=m.inlineOptions.minDate?null:new Date,m.dateOptions.minDate=m.inlineOptions.minDate}function a(){if(m.config.project){if("All"===m.config.project)return void(m.versions=[]);i.getVersions(angular.fromJson(m.config.project).identifier).then(function(e){m.versions=e})}}function c(){m.config.filterWithVersion&&m.updateVersions()}function l(){m.config.timespan.toDateTime=new Date(angular.fromJson(m.config.version).due_date);var e=new Date(m.config.timespan.toDateTime);m.config.timespan.fromDateTime=e.setDate(e.getDate()-14)}function d(){i.getTrackers().then(function(e){m.trackers=e})}function u(e){var t=e.date,n=e.mode;if("day"===n)for(var i=new Date(t).setHours(0,0,0,0),o=0;o<m.events.length;o++){var r=new Date(m.events[o].date).setHours(0,0,0,0);if(i===r)return m.events[o].status}return""}var m=this;m.config=t,m.projects=e,m.addFilter=o,m.converStringsToDateObjects=r,m.toggleMin=s,m.open1=function(){m.popup1.opened=!0},m.open2=function(){m.popup2.opened=!0},m.updateVersions=a,m.checkUpdates=c,m.updateVersionEnd=l,m.updateTracker=d,m.filters=[{id:"version",name:"Fixed Version"},{id:"assigned",name:"Assigned to"},{id:"tracker",name:"Tracker"}],m.config.timespan||(m.config.timespan={}),m.inlineOptions={customClass:u,minDate:new Date,showWeeks:!0},m.dateOptions||(m.dateOptions={formatYear:"yy",startingDay:1}),m.formats=["yyyy-MM-dd","yyyy/MM/dd","dd.MM.yyyy","shortDate"],m.format=m.formats[0],m.altInputFormats=["M!/d!/yyyy"],m.popup1={opened:!1},m.popup2={opened:!1},m.toggleMin(),m.converStringsToDateObjects()}]),angular.module("adf.widget.redmine").controller("IssueController",["issues","config",function(e,t){var n=this;n.config=t,n.config.limit||(n.config.limit=25),n.issues=e}]),angular.module("adf.widget.redmine").factory("chartDataService",["$q","redmineService",function(e,t){function n(e){return t.getIssuesForChart(e).then(function(t){var n=new Date(e.timespan.fromDateTime),o=new Date(e.timespan.toDateTime);return i(n,o,t,e)})}function i(e,t,n,i){for(var s=Math.abs(e.getTime()-t.getTime()),a=Math.ceil(s/864e5),c=n.length,l=c/a,d=[],u=[],m=[];e.getTime()<=t.getTime();){o(n,u,e),r(u,e);var p={x:e.toISOString(),y:u.length};if(m.push(p),i.showIdeal){var g=c-d.length*l,f={x:e.toISOString(),y:g};d.push(f)}e.setDate(e.getDate()+1)}var h=[m];return i.showIdeal&&h.push(d),{values:h}}function o(e,t,n){for(var i=0;i<e.length;i++){var o=new Date(e[i].created_on);if(!(o.getTime()<=n.getTime()))break;t.push(e[i]),e.splice(i,1),i--}}function r(e,t){for(var n=0;n<e.length;n++)if(e[n].closed_on){var i=new Date(e[n].closed_on);i.getTime()<=t.getTime()&&(e.splice(n,1),n--)}}return{getChartData:n}}]),angular.module("adf.widget.redmine").controller("ChartController",["chartData","config",function(e,t){var n=this;n.config=t;var i=e,o={scales:{yAxes:[{id:"y-axis-1",display:!0,position:"left",scaleLabel:{display:!0,labelString:"Open Issues"}}],xAxes:[{id:"x-axis-1",type:"time",time:{displayFormats:{day:"D.MMM",week:"D.MMM",month:"MMM/YY",quarter:"[Q]Q - YYYY",year:"YYYY"}}}]},legend:{display:!0,position:"bottom"}};n.chart={labels:i.dates,data:i.values,series:[],"class":"chart-line",options:o},n.config.project&&"All"!==n.config.project?n.chart.series.push(angular.fromJson(n.config.project).name):n.chart.series.push("All Projects"),n.config.showIdeal&&n.chart.series.push("Ideal")}]),angular.module("adf.widget.redmine").factory("redmineService",["$http","redmineEndpoint","$q",function(e,t,n){function i(e){return e.data}function o(n){return e.get(t+n).then(i)}function r(){return o("projects.json").then(function(e){return e.projects})}function s(e){return o("projects/"+e+"/versions.json").then(function(e){return e.versions})}function a(e){var t=g(e),n=e.limit?e.limit:Number.MAX_SAFE_INTEGER;return l(t,n)}function c(e){var t=[],i=e.limit?e.limit:Number.MAX_SAFE_INTEGER,o=u(e),r=p(e),s=m(e);return n.all([l(o,i),l(r,i),l(s,i)]).then(function(e){return angular.forEach(e,function(e){angular.forEach(e,function(e){t.push(e)})}),t})}function l(e,t){var i=[];return d(e,0).then(function(o){angular.forEach(o.issues,function(e){i.push(e)});for(var r=[],s=100;s<o.total_count&&s<t;s+=100)r.push(d(e,s));return e.length>0?n.all(r).then(function(e){return angular.forEach(e,function(e){angular.forEach(e.issues,function(e){i.push(e)})}),i}):i})}function d(e,t){return o("issues.json"+e+"&offset="+t).then(function(e){return e})}function u(e){var t=g(e);t+="&status_id=*";var n=new Date(e.timespan.toDateTime);return t+="&created_on=<="+f(n),t+="&closed_on=>="+f(n)}function m(e){var t=g(e);t+="&status_id=open";var n=new Date(e.timespan.toDateTime);return t+="&created_on=<="+f(n)}function p(e){var t=g(e);t+="&status_id=*";var n=new Date(e.timespan.fromDateTime),i=new Date(e.timespan.toDateTime);return t+="&closed_on=><"+f(n)+"|"+f(i)}function g(e){var t="?limit=100&sort=created_on";return e.project&&"All"!==e.project&&(t+="&project_id="+angular.fromJson(e.project).id),e.filterWithAssigned&&e.assigned_to_id&&(t+="&assigned_to_id="+e.assigned_to_id),e.showClosed&&(t+="&status_id=*"),e.filterWithVersion&&e.version&&(t+="&fixed_version_id="+angular.fromJson(e.version).id),e.filterWithTracker&&e.tracker&&(t+="&tracker_id="+angular.fromJson(e.tracker).id),t}function f(e){var t=e.getDate(),n=e.getMonth()+1,i=e.getFullYear();return""+i+"-"+(n<=9?"0"+n:n)+"-"+(t<=9?"0"+t:t)}function h(){return o("trackers.json").then(function(e){return e.trackers})}return{getIssues:a,getIssuesForChart:c,getProjects:r,getVersions:s,getTrackers:h}}])}(window);